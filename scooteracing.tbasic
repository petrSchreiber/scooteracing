uses "tbgl", "tbdi"

#include once "data/game/resourceManager.tbasicu"
#include once "offScreenRenderer/offScreenRenderer8b.tbasicu"
#include once "controllers/xboxOne.tbasicu"
#include once "data/game/track.tbasicu"
#include once "racers/scooter.tbasicu"

begin const
  ' -- Scene IDs
  %scene  = 1
 
  ' -- Entity IDs 
  %eLight
  %eTrack
end const

function tbMain()
  
  double frameRate
  
  int32 ScreenWidth = 800
  int32 ScreenHeight= 600
  
  ' -- Create and show window
  dWord hWnd = tbgl_createWindowEx("Scooteracing - press ESC to quit", ScreenWidth, ScreenHeight, 32, %TBGL_WS_WINDOWED | %TBGL_WS_CLOSEBOX)
  tbgl_showWindow

  dim playerController(2) as tXBoxOneController
  playerController(1).Initialize(hWnd, 1)
  playerController(2).Initialize(hWnd, 2)

  ' -- Create scene
  tbgl_sceneCreate(%scene)

  ' -- Create point light  
  tbgl_entityCreateLight(%scene, %eLight, 0, %TBGL_LIGHTTYPE_DIRECTIONAL)
    tbgl_entityTurn(%scene, %eLight, 90, 45, 0)

  ' -- Create something to look at
  dim track as tTrack
  int32 dlTrack = track.Load(app_sourcepath+"data\tracks\Curly.bmp")
  tbgl_entityCreateDLSlot(%scene, %eTrack, 0, dlTrack)

  dim player(2) as tScooterRacer
  player(1).Load("data/models/scooter.m15")
  player(1).ToEntity(%scene)
  
  player(2).Load("data/models/scooter.m15")
  player(2).ToEntity(%scene)
  
  tbgl_entitySetPos(%scene, player(1).pivotEntity, track.startX + switch(track.startRot=0, 2, track.startRot=90,-2, track.startRot=180,-2, track.startRot=270, 2),
                                                   0,
                                                   track.startZ + switch(track.startRot=0, 2, track.startRot=90,-2, track.startRot=180,-2, track.startRot=270, 2))
    tbgl_entitySetRot(%scene, player(1).pivotEntity, 0, 180-track.startRot, 0)
    
  tbgl_entitySetPos(%scene, player(2).pivotEntity, track.startX + switch(track.startRot=0,-2, track.startRot=90,-2, track.startRot=180, 2, track.startRot=270, 2),
                                                   0,
                                                   track.startZ + switch(track.startRot=0, 2, track.startRot=90, 2, track.startRot=180,-2, track.startRot=270,-2))
    tbgl_entitySetRot(%scene, player(2).pivotEntity, 0, 180-track.startRot, 0)
  
  dim osr(2) as offScreenRenderer8b
  long width, height
  tbgl_getWindowClient(hWnd, width, height)
  osr(1).buildBuffer(width/4, height/4, %OSR_NEAREST_NEIGHBOUR)
  osr(2).buildBuffer(width/4, height/4, %OSR_NEAREST_NEIGHBOUR)
  
  single p1x, p1y, p1z
  single p2x, p2y, p2z
  single distance
  
  single speed, inclination
  single gas, steer
  single screenOffset
  
  tbgl_backColor 64, 128, 255
  
  int32 i
  ' -- Main loop
  while tbgl_isWindow(hWnd) 
    frameRate = tbgl_getFrameRate
    tbgl_setWindowTitle(hWnd, format$(frameRate, "#.00"))
    
    for i = 1 to 2
      osr(i).beginRender()
        tbgl_renderMatrix3D
        tbgl_clearFrame
          
          player(i).EnforceCamera()
          tbgl_sceneRender(%scene)

      osr(i).endRender()
    next
      
    tbgl_renderMatrix2D(0, 0, 1, 1)
    tbgl_clearFrame
      
      tbgl_pushColor 255,255,255
        tbgl_pushState %TBGL_TEXTURING
          tbgl_pushStateProtect %TBGL_LIGHTING
            
            for i = 1 to 2
              osr(i).bindTexture()
              
              screenOffset = - (i-1)*0.5
              tbgl_beginPoly %GL_QUADS
                tbgl_texCoord2d 0, 0.0: tbgl_vertex 0, 0.5 + screenOffset
                tbgl_texCoord2d 1, 0.0: tbgl_vertex 1, 0.5 + screenOffset
                tbgl_texCoord2d 1, 0.5: tbgl_vertex 1, 1.0 + screenOffset
                tbgl_texCoord2d 0, 0.5: tbgl_vertex 0, 1.0 + screenOffset
              tbgl_endPoly
            next
            
          tbgl_popStateProtect
        tbgl_popState
      tbgl_popColor
      
    tbgl_drawFrame

    ' -- ESCAPE key to exit application
    if tbgl_getWindowKeyState(hWnd, %VK_ESCAPE) then exit while
    
    for i = 1 to 2
      player(i).ProcessInput(playerController(i))
      player(i).ApplyInput(frameRate, track)
    next
    
    tbgl_entityGetPos(%scene, player(1).pivotEntity, p1x, p1y, p1z)
    tbgl_entityGetPos(%scene, player(2).pivotEntity, p2x, p2y, p2z)
    
    distance = dist(p1x, p1z, p2x, p2z)
    printl distance
    if distance < 1.5 then
      p1x += ((p1x-p2x)*2)/framerate
      p1z += ((p1z-p2z)*2)/framerate
      
      p2x -= ((p1x-p2x)*2)/framerate
      p2z -= ((p1z-p2z)*2)/framerate
      
      tbgl_entitysetPos(%scene, player(1).pivotEntity, p1x, p1y, p1z)
      tbgl_entitysetPos(%scene, player(2).pivotEntity, p2x, p2y, p2z)
      
    end if

  wend

  tbgl_destroyWindow
end function
